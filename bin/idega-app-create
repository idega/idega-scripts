#!/bin/sh

printf '########################################################################################################\n'
printf '# A script to setup an idega app - inclusive tomcat app server, mysql database and war webapp.         #\n'
printf '# By Eirikur Hrafnsson (eiki@idega.com), Tryggvi Larusson (tryggvi@idega.com) Idega Software 2008-2009 #\n'
printf '########################################################################################################\n'
printf '\n'

usage()
{
cat << EOF

    Usage: $0 [options]

    A script to setup a new idega app.

  OPTIONS:
   -h                  Show this message
   -s [name]           Server Name (such as myserver)
   -l [aliases]        Server DNS Aliases Comma Separated (such as www.myserver.com,www2.myserver.com)
   -p [password]       MySQL Root password
   -b [folderpath]     Base Folder Path for idega/tomcats installation
   -n [nubmer]         Server number [1..99]
   -a [artifactId]     App name (maven artifactId - default idega-webapp-base)
   -g [groupId]        App Group (maven artifactId - default com.idega.webapp.product)
   -f [importdatafile] File (tgz) to import data into the app

EOF
}


VERBOSE=1
LASTSERVERNUMBER=0
while getopts “hs:l:p:b:n:a:g:f:” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         s)
             SERVERNAME=$OPTARG
             ;;
         l)
             SERVERALIASES=$OPTARG
             ;;
		 p)
             MYSQLROOTPW=$OPTARG
             ;;
		 b)
             TOMCATSFOLDER=$OPTARG
             ;;
         n)
             SERVERNUMBER=$OPTARG
             ;;
         a)
             WEBAPPNAME=$OPTARG
             ;;
         g)
             WEBAPPGROUP=$OPTARG
             ;;
         f)
             IMPORTFILE=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [[ -z $SERVERNAME ]]
then
	echo "In verbose mode"
else
	VERBOSE=0
	echo "Not in verbose mode"
fi

if [ -z $TOMCATSFOLDER ]; then
	TOMCATSFOLDER=~/tomcat
fi


VIRTUALHOSTSCONFIGFILEPATH=$TOMCATSFOLDER/conf/virtualhosts.conf

if [ -z $IDEGA_SCRIPTS_HOME ]; then
	SCRIPTDIR=`dirname $0`'/..'
	IDEGA_SCRIPTS_HOME=$SCRIPTDIR
	export IDEGA_SCRIPTS_HOME
	export PATH=$PATH:IDEGA_SCRIPTS_HOME/bin
else
	SCRIPTDIR=$IDEGA_SCRIPTS_HOME
fi

echo "Script Directory Path: $SCRIPTDIR"

if [ -z $SERVERNAME ]
then
	read -p 'Enter the servers domain name (without www.) : ' SERVERNAME
	#SERVERNAME=$1
	if [ -z $SERVERALIASES ]; then
		read -p 'Server Aliases Comma Separated (such as www.myserver.com,www2.myserver.com): ' SERVERALIASES
	fi
else
	printf "Creating app with name: $SERVERNAME.\n"
fi

APPFOLDER=$TOMCATSFOLDER/$SERVERNAME

if [ -e $APPFOLDER ]; then
	printf "Error: App $SERVERNAME already exists. Please delete it before re-creating it\n"
	exit 0
fi




SERVERSPROPERTIESFILE=$TOMCATSFOLDER/servers.properties
#If not in verbose mode:
if [ $VERBOSE -eq 0 ]; then
	#Try to find out next server number from properties file:
	if [ -e $SERVERSPROPERTIESFILE ]; then
			LASTSERVERNUMBER=`sed '/^\#/d' $SERVERSPROPERTIESFILE | grep 'lastServerNumber'  | tail -n 1 | sed 's/^.*=//'`
			if [ ! -z $LASTSERVERNUMBER ]; then
				SERVERNUMBER=$(($LASTSERVERNUMBER+1))
			fi
	else
		SERVERNUMBER="1"
	fi
fi

if [ -z $SERVERNUMBER ]; then
	#read -p 'Enter the AJP connector port number (93xx) : ' AJPPORT
	if [ -e $VIRTUALHOSTSCONFIGFILEPATH ]
	then
		printf 'These are used AJP ports choose a port number that is not in use: \n'
		cat $VIRTUALHOSTSCONFIGFILEPATH | grep "ProxyPass /"
		printf '\n'
	fi
	read -p 'Enter the number of this new server [1..99] : ' SERVERNUMBER
	AJPPORT=$(($SERVERNUMBER+9300))
	#AJPPORT=$2
else
	AJPPORT=$(($SERVERNUMBER+9300))
	printf "Creating app number $SERVERNUMBER with AJP Port: $AJPPORT\n"
fi

if [ $VERBOSE -eq 0 ]; then
	if [ -z $SERVERALIASES ]; then
		SERVERALIASES=www.$SERVERNAME
	fi
	if [ -z $WEBAPPGROUP ]; then
		WEBAPPGROUP="com.idega.webapp.product"
	fi
	if [ -z $WEBAPPNAME ]; then
		WEBAPPNAME="idega-webapp-base"
	fi
	if [ -z $WEBAPPVERSION ]; then
		WEBAPPVERSION="4.1.3-SNAPSHOT"
	fi

	DATABASENAME="${SERVERNAME:0:12}.db"
	DATABASENAME=${DATABASENAME//\./_}
	printf "Database name: $DATABASENAME\n"
	DBUSER="${SERVERNAME:0:12}.usr"
	DBUSER=${DBUSER//\./_}
	printf "Database username: $DBUSER\n"
	DBPASSWORD=`random-string`
	printf "Database password: $DBPASSWORD\n"
	TOMCATADMINPASSWORD=`random-string`
	printf "Tomcat admin password: $TOMCATADMINPASSWORD\n"
fi

#TODO support external database, ask for servername as well
if [ -z $DATABASENAME ]; then
	read -p 'Enter the MySQL database name : ' DATABASENAME
fi
if [ -z $DBUSER ]; then
	read -p 'Enter the database user : ' DBUSER
fi
if [ -z $DBPASSWORD ]; then
	read -p 'Enter the database users password : ' DBPASSWORD
fi

if [ -z $TOMCATADMINPASSWORD ]; then
	#Set the default tomcat admin and manager password. The username is "admin"
	read -p 'Enter tomcat admin password to use: ' TOMCATADMINPASSWORD
fi

#Set the webapp to use
if [ -z $WEBAPPGROUP ]; then
	read -p 'Enter webapp group (example com.idega.webapp.product) to use: ' WEBAPPGROUP
fi
if [ -z $WEBAPPNAME ]; then
	read -p 'Enter webapp name (example idega-webapp-base) to use: ' WEBAPPNAME
fi
if [ -z $WEBAPPVERSION ]; then
	read -p 'Enter webapp version (example 4.1.3-SNAPSHOT) to use: ' WEBAPPVERSION
fi

MYSQLDRIVERARCHIVEPATH=$TOMCATSFOLDER/mysql-connector-java-5.1.8.tar.gz
MYSQLDRIVERDOWNLOADURL=http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.8.tar.gz/from/http://ftp.sunet.se/pub/unix/databases/relational/mysql/
MYSQLDRIVERPATH=$TOMCATSFOLDER/mysql-connector-java-5.1.8/mysql-connector-java-5.1.8-bin.jar

TOMCATVERSION=6.0.20
TOMCATFOLDERNAME="apache-tomcat-$TOMCATVERSION"
TOMCATARCHIVE="$TOMCATFOLDERNAME.tar.gz"
TOMCATDOWNLOADURL="http://apache.dataphone.se/tomcat/tomcat-6/v$TOMCATVERSION/bin/apache-tomcat-$TOMCATVERSION.tar.gz"

if [ ! -e $TOMCATSFOLDER ]; then
	mkdir -p $TOMCATSFOLDER
fi
LOGSFOLDER=$TOMCATSFOLDER/logs
if [ ! -e $LOGSFOLDER ]; then
	mkdir -p $LOGSFOLDER
fi


#tomcat/conf/server.xml
SHUTDOWNPORT=$(($AJPPORT-300))
HTTPPORT=$(($AJPPORT-200))
JMXPORT=$(($AJPPORT-100))
DEBUGPORT=$(($SERVERNUMBER+10000))

#tomcat/conf/Catalina/localhost/Root.xml
#TODO make a random username and password
#DATABASENAME=$SERVERNAME
#DBUSER=idegaweb
#DBPASSWORD=r4pp3rs0n


#tomcat/conf/virtualhost.conf
if [ -z $SERVERALIASES ]; then
	SERVERALIASES=${SERVERALIASES//\,/ }
fi

#tomcats/conf/virtualhosts.conf
VIRTUALHOSTSCONFIGTEMPFILEPATH=$VIRTUALHOSTSCONFIGFILEPATH.tmp

####
# DO STUFF!
####

#Create the database and set access rights
TEMPDIR='/tmp'
CREATEDATABASEFILENAME=$TEMPDIR/$SERVERNAME'-createdatabase.sql'
CREATEDATABASETEMPFILENAME=$TEMPDIR/$SERVERNAME'-createdatabase.sql.tmp'
cp $SCRIPTDIR/templates/createdatabase-template.sql $CREATEDATABASEFILENAME

replace DATABASENAME $DATABASENAME < $CREATEDATABASEFILENAME > $CREATEDATABASETEMPFILENAME
mv $CREATEDATABASETEMPFILENAME $CREATEDATABASEFILENAME
replace DBUSER $DBUSER < $CREATEDATABASEFILENAME > $CREATEDATABASETEMPFILENAME
mv $CREATEDATABASETEMPFILENAME $CREATEDATABASEFILENAME
replace DBPASSWORD $DBPASSWORD < $CREATEDATABASEFILENAME > $CREATEDATABASETEMPFILENAME
mv $CREATEDATABASETEMPFILENAME $CREATEDATABASEFILENAME

if [ -z $MYSQLROOTPW ]; then
	printf '\n'
	printf 'Enter MySQL root user password'
	printf '\n'
	mysql -uroot -p < $CREATEDATABASEFILENAME
	printf 'Database created'
	printf '\n'
else
	mysql -uroot -p$MYSQLROOTPW < $CREATEDATABASEFILENAME
fi
rm $CREATEDATABASEFILENAME

#Unzip,unzip and rename the custom tomcat archive
cd $TOMCATSFOLDER
if [ ! -e $TOMCATARCHIVE ]; then
	wget $TOMCATDOWNLOADURL
fi
#Download JDBC Driver
if [ ! -e $MYSQLDRIVERARCHIVEPATH ]; then
	wget $MYSQLDRIVERDOWNLOADURL
	tar xfvz $MYSQLDRIVERARCHIVEPATH
fi


tar zxvf $TOMCATARCHIVE
mv $TOMCATFOLDERNAME $SERVERNAME

# Configuration starts, replacing values
# Todo autogenerate port numbers from a last port used (store in a file or as a system variable)

#Change server.xml
SERVERXMLFILEPATH=$SERVERNAME'/conf/server.xml'
SERVERXMLTEMPFILEPATH=$SERVERNAME'/conf/server.xml.tmp'

replace port=\"8009\" port=\"$AJPPORT\" < $SERVERXMLFILEPATH > $SERVERXMLTEMPFILEPATH
mv $SERVERXMLTEMPFILEPATH $SERVERXMLFILEPATH
replace port=\"8005\" port=\"$SHUTDOWNPORT\" < $SERVERXMLFILEPATH > $SERVERXMLTEMPFILEPATH
mv $SERVERXMLTEMPFILEPATH $SERVERXMLFILEPATH
replace port=\"8080\" port=\"$HTTPPORT\" < $SERVERXMLFILEPATH > $SERVERXMLTEMPFILEPATH
mv $SERVERXMLTEMPFILEPATH $SERVERXMLFILEPATH
replace 'redirectPort="8443"' 'redirectPort="8443" URIEncoding="UTF-8"' < $SERVERXMLFILEPATH > $SERVERXMLTEMPFILEPATH
mv $SERVERXMLTEMPFILEPATH $SERVERXMLFILEPATH

DATA_PATH=~/data
SLIDE_DATA_PATH=$DATA_PATH/$SERVERNAME/slide
if [ ! -e $SLIDE_DATA_PATH ];then
	mkdir -p $SLIDE_DATA_PATH
fi

#Change ROOT.xml
ROOTXMLTEMPLATE=$SCRIPTDIR/templates/ROOT-template.xml
mkdir -p $SERVERNAME/conf/Catalina/localhost
ROOTXMLFILEPATH=$SERVERNAME'/conf/Catalina/localhost/ROOT.xml'
ROOTXMLTEMPFILEPATH=$SERVERNAME'/conf/Catalina/localhost/ROOT.xml.tmp'
cp $ROOTXMLTEMPLATE $ROOTXMLFILEPATH

replace DATABASENAME $DATABASENAME < $ROOTXMLFILEPATH > $ROOTXMLTEMPFILEPATH
mv $ROOTXMLTEMPFILEPATH $ROOTXMLFILEPATH
replace DBUSER $DBUSER < $ROOTXMLFILEPATH > $ROOTXMLTEMPFILEPATH
mv $ROOTXMLTEMPFILEPATH $ROOTXMLFILEPATH
replace DBPASSWORD $DBPASSWORD < $ROOTXMLFILEPATH > $ROOTXMLTEMPFILEPATH
mv $ROOTXMLTEMPFILEPATH $ROOTXMLFILEPATH
replace SLIDE_DATA_PATH $SLIDE_DATA_PATH < $ROOTXMLFILEPATH > $ROOTXMLTEMPFILEPATH
mv $ROOTXMLTEMPFILEPATH $ROOTXMLFILEPATH

#Change virtualhost.conf
VIRTUALHOSTTEMPLATE=$SCRIPTDIR/templates/virtualhost-template.conf
VIRTUALHOSTFILEPATH=$SERVERNAME'/conf/virtualhost.conf'
VIRTUALHOSTTEMPFILEPATH=$SERVERNAME'/conf/virtualhost.conf.tmp'
cp $VIRTUALHOSTTEMPLATE $VIRTUALHOSTFILEPATH

if [ ! -e $TOMCATSFOLDER/conf.d ]; then
	mkdir $TOMCATSFOLDER/conf.d
fi

replace SERVERNAME $SERVERNAME < $VIRTUALHOSTFILEPATH > $VIRTUALHOSTTEMPFILEPATH
mv $VIRTUALHOSTTEMPFILEPATH $VIRTUALHOSTFILEPATH
replace AJPPORT $AJPPORT < $VIRTUALHOSTFILEPATH > $VIRTUALHOSTTEMPFILEPATH
mv $VIRTUALHOSTTEMPFILEPATH $VIRTUALHOSTFILEPATH
replace SERVERALIASES $SERVERALIASES < $VIRTUALHOSTFILEPATH > $VIRTUALHOSTTEMPFILEPATH
mv $VIRTUALHOSTTEMPFILEPATH $VIRTUALHOSTFILEPATH
replace TOMCATSFOLDER $TOMCATSFOLDER < $VIRTUALHOSTFILEPATH > $VIRTUALHOSTTEMPFILEPATH
mv $VIRTUALHOSTTEMPFILEPATH $VIRTUALHOSTFILEPATH

MAXMEMSIZE="256M"
MAXPERMSIZE="128M"

STARTUPSCRIPTPATH=$SERVERNAME'/bin/startup.sh'
STARTUPSCRIPTTEMPPATH=$SERVERNAME'/bin/startup.sh.tmp'

SHUTDOWNSCRIPTPATH=$SERVERNAME'/bin/shutdown.sh'
SHUTDOWNSCRIPTTEMPPATH=$SERVERNAME'/bin/shutdown.sh.tmp'

awk '{ if ( $0 ~ /#!\/bin\/sh/ ) {
	  printf( "%s\n%s\n", $0, "#IDEGAWEB-CONFIG-START" );
	  printf( "export LD_LIBRARY_PATH=\"\$LD_LIBRARY_PATH:/usr/X11/lib\"\n" );
	  printf( "#uncomment for remote debugging\n" );
	  printf( "#export CATALINA_OPTS=\"-Xmx$MAXMEMSIZE -XX:MaxPermSize=$MAXPERMSIZE -Dfile.encoding=UTF-8 -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=$DEBUGPORT -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40\"\n" );
	  printf( "#production defaults\n" );
	  printf( "export CATALINA_OPTS=\"-Xmx$MAXMEMSIZE -XX:MaxPermSize=$MAXPERMSIZE -Dfile.encoding=UTF-8 -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=40 \"\n" );
	  printf( "export CATALINA_PID=\"$APPFOLDER/tomcat.pid\"\n" );
	  printf( "#IDEGAWEB-CONFIG-END\n" );
     } else {
          print $0;
     }
}' $STARTUPSCRIPTPATH > $STARTUPSCRIPTTEMPPATH
mv $STARTUPSCRIPTTEMPPATH $STARTUPSCRIPTPATH
sed s/\$DEBUGPORT/$DEBUGPORT/ $STARTUPSCRIPTPATH > $STARTUPSCRIPTTEMPPATH
mv $STARTUPSCRIPTTEMPPATH $STARTUPSCRIPTPATH
APPFOLDERESCAPED=${APPFOLDER//\//\\\/}
#echo "APPFOLDERESCAPED: $APPFOLDERESCAPED"
sed s/\$APPFOLDER/$APPFOLDERESCAPED/ $STARTUPSCRIPTPATH > $STARTUPSCRIPTTEMPPATH
mv $STARTUPSCRIPTTEMPPATH $STARTUPSCRIPTPATH
sed s/\$MAXMEMSIZE/$MAXMEMSIZE/ $STARTUPSCRIPTPATH > $STARTUPSCRIPTTEMPPATH
mv $STARTUPSCRIPTTEMPPATH $STARTUPSCRIPTPATH
sed s/\$MAXPERMSIZE/$MAXPERMSIZE/ $STARTUPSCRIPTPATH > $STARTUPSCRIPTTEMPPATH
mv $STARTUPSCRIPTTEMPPATH $STARTUPSCRIPTPATH
chmod 755 $STARTUPSCRIPTPATH
awk '{ if ( $0 ~ /#!\/bin\/sh/ ) {
	  printf( "%s\n%s\n", $0, "#IDEGAWEB-CONFIG-START" );
	  printf( "export CATALINA_PID=\"$APPFOLDER/tomcat.pid\"\n" );
	  printf( "#IDEGAWEB-CONFIG-END\n" );
     } else {
          print $0;
     }
}' $SHUTDOWNSCRIPTPATH > $SHUTDOWNSCRIPTTEMPPATH
mv $SHUTDOWNSCRIPTTEMPPATH $SHUTDOWNSCRIPTPATH
sed s/\$MAXPERMSIZE/$MAXPERMSIZE/ $SHUTDOWNSCRIPTPATH > $SHUTDOWNSCRIPTTEMPPATH
mv $SHUTDOWNSCRIPTTEMPPATH $SHUTDOWNSCRIPTPATH
chmod 755 $SHUTDOWNSCRIPTPATH

#Append this servers virtualhost.conf to the virtualhosts.conf for apache
if [ ! -e $VIRTUALHOSTSCONFIGFILEPATH ]; then
	mkdir $TOMCATSFOLDER/conf
	touch $VIRTUALHOSTSCONFIGFILEPATH
fi
cp $VIRTUALHOSTFILEPATH $TOMCATSFOLDER/conf.d/$SERVERNAME.conf
#cat $VIRTUALHOSTFILEPATH >> $VIRTUALHOSTSCONFIGFILEPATH

VIRTUALHOSTSTEMPLATE=$SCRIPTDIR/templates/virtualhosts-template.conf
cp $VIRTUALHOSTSTEMPLATE $VIRTUALHOSTSCONFIGFILEPATH
replace TOMCATSFOLDER $TOMCATSFOLDER < $VIRTUALHOSTSCONFIGFILEPATH > $VIRTUALHOSTSCONFIGTEMPFILEPATH
mv $VIRTUALHOSTSCONFIGTEMPFILEPATH $VIRTUALHOSTSCONFIGFILEPATH

#Install JDBC Driver
cp $MYSQLDRIVERPATH $SERVERNAME/lib

#Change tomcat-users.xml
TOMCATUSERSTEMPLATEFILEPATH=$SCRIPTDIR'/templates/tomcat-users-template.xml'
TOMCATUSERSFILEPATH=$SERVERNAME'/conf/tomcat-users.xml'
TOMCATUSERSTEMPFILEPATH=$SERVERNAME'/conf/tomcat-users.xml.tmp'
cp $TOMCATUSERSTEMPLATEFILEPATH $TOMCATUSERSFILEPATH

replace TOMCATADMINPASSWORD $TOMCATADMINPASSWORD < $TOMCATUSERSFILEPATH > $TOMCATUSERSTEMPFILEPATH
mv $TOMCATUSERSTEMPFILEPATH $TOMCATUSERSFILEPATH

SLIDEDATAPATH="bin"

cd $SERVERNAME
echo -ne "artifactId=$WEBAPPNAME\ngroupId=$WEBAPPGROUP\nversion=$WEBAPPVERSION\ndatabasetype=mysql\ndatabasename=$DATABASENAME\nslidedatapath=$SLIDEDATAPATH" > idega.properties


#Update server.properties
if [ $LASTSERVERNUMBER -eq 0 ]; then
	if [ ! -e $SERVERSPROPERTIESFILE ]; then
		touch $SERVERSPROPERTIESFILE
	fi
	echo -ne "lastServerNumber=$SERVERNUMBER\n" > $SERVERSPROPERTIESFILE
else
	if [ $LASTSERVERNUMBER -lt $SERVERNUMBER  ]; then
		replace lastServerNumber=$LASTSERVERNUMBER lastServerNumber=$SERVERNUMBER < $SERVERSPROPERTIESFILE > $SERVERSPROPERTIESFILE.tmp
		mv -f $SERVERSPROPERTIESFILE.tmp $SERVERSPROPERTIESFILE
	fi
fi
		
#cd $SERVERNAME
idega-app-update -v $WEBAPPVERSION

if [ ! -z $IMPORTFILE ]; then
	printf '\nNow importing data from importfile\n\n'
	idega-app-data-import -s $SERVERNAME -d $DATABASENAME -f $IMPORTFILE
fi

#Reload config files without severing connections to running processes
#TODO MAKE SUDOERS WORK
printf '\nNOW restart apache manually with : apachectl graceful\n\n'
#sudo apachectl graceful

printf "Done setting up and now starting the tomcat server: $SERVERNAME\n"
printf "Your server should now be available on http://$SERVERNAME or http://localhost:$HTTPPORT\n"
